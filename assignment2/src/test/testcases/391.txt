
        Class Node {
            Var data : Int;
            Val next : Node;

            Constructor(d : Int)
            {
                data = d;
                next = Null;
            }

            reverse(node : Node)
            {
                Var prev : Node = Null;
                Val current : Node = node;
                Val next : Node = Null;
                Foreach (i In 1 .. forever By 1) {
                    If (current == Null) {
                        Break;
                    } 
                    Else {
                        next = current.next;
                        current.next = prev;
                        prev = current;
                        current = next;
                    }
                }
                node = prev;
                Return node;
            }

            printList(node : Node)
            {
                Foreach (a In 1 .. n By 1) {
                    If (node != Null) {
                        System.out.print(node.data +. " ");
                        node = node.next;
                    } 
                    Else {
                        Break;
                    }
                }
            }
        }

        Class Program {
            main()
            {
                Val num1, num2: Int = 100, 200;
                Val list : LinkedList = New LinkedList();
                list.head = New Node(num1);
                list.head.next = New Node(num2);
                list.head.next.next = New Node(-516e21);
                list.head.next.next.next = New Node(985.414400e2);

                System.out.println("Given Linked list: \n");
                list.printList(head);
                head = list.reverse(head);
                System.out.println("");
                System.out.println("Reversed linked list: ");
                list.printList(head);
            }
        }
        